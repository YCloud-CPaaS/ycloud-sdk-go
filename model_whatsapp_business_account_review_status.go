/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappBusinessAccountReviewStatus WhatsApp Business Account review status.
type WhatsappBusinessAccountReviewStatus string

// List of WhatsappBusinessAccountReviewStatus
const (
	WHATSAPPBUSINESSACCOUNTREVIEWSTATUS_PENDING WhatsappBusinessAccountReviewStatus = "PENDING"
	WHATSAPPBUSINESSACCOUNTREVIEWSTATUS_APPROVED WhatsappBusinessAccountReviewStatus = "APPROVED"
	WHATSAPPBUSINESSACCOUNTREVIEWSTATUS_REJECTED WhatsappBusinessAccountReviewStatus = "REJECTED"
)

// All allowed values of WhatsappBusinessAccountReviewStatus enum
var AllowedWhatsappBusinessAccountReviewStatusEnumValues = []WhatsappBusinessAccountReviewStatus{
	"PENDING",
	"APPROVED",
	"REJECTED",
}

func (v *WhatsappBusinessAccountReviewStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappBusinessAccountReviewStatus(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappBusinessAccountReviewStatusFromValue returns a pointer to a valid WhatsappBusinessAccountReviewStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappBusinessAccountReviewStatusFromValue(v string) (*WhatsappBusinessAccountReviewStatus, error) {
	ev := WhatsappBusinessAccountReviewStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappBusinessAccountReviewStatus: valid values are %v", v, AllowedWhatsappBusinessAccountReviewStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappBusinessAccountReviewStatus) IsValid() bool {
	for _, existing := range AllowedWhatsappBusinessAccountReviewStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappBusinessAccountReviewStatus value
func (v WhatsappBusinessAccountReviewStatus) Ptr() *WhatsappBusinessAccountReviewStatus {
	return &v
}

type NullableWhatsappBusinessAccountReviewStatus struct {
	value *WhatsappBusinessAccountReviewStatus
	isSet bool
}

func (v NullableWhatsappBusinessAccountReviewStatus) Get() *WhatsappBusinessAccountReviewStatus {
	return v.value
}

func (v *NullableWhatsappBusinessAccountReviewStatus) Set(val *WhatsappBusinessAccountReviewStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappBusinessAccountReviewStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappBusinessAccountReviewStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappBusinessAccountReviewStatus(val *WhatsappBusinessAccountReviewStatus) *NullableWhatsappBusinessAccountReviewStatus {
	return &NullableWhatsappBusinessAccountReviewStatus{value: val, isSet: true}
}

func (v NullableWhatsappBusinessAccountReviewStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappBusinessAccountReviewStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

