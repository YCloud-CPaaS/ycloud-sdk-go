/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageContactPhone struct for WhatsappMessageContactPhone
type WhatsappMessageContactPhone struct {
	// Automatically populated with the `wa_id` value as a formatted phone number.
	Phone *string `json:"phone,omitempty"`
	// Standard Values are `CELL`, `MAIN`, `IPHONE`, `HOME`, and `WORK`.
	Type *string `json:"type,omitempty"`
	// WhatsApp ID.
	WaId *string `json:"wa_id,omitempty"`
}

// NewWhatsappMessageContactPhone instantiates a new WhatsappMessageContactPhone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageContactPhone() *WhatsappMessageContactPhone {
	this := WhatsappMessageContactPhone{}
	return &this
}

// NewWhatsappMessageContactPhoneWithDefaults instantiates a new WhatsappMessageContactPhone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageContactPhoneWithDefaults() *WhatsappMessageContactPhone {
	this := WhatsappMessageContactPhone{}
	return &this
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *WhatsappMessageContactPhone) GetPhone() string {
	if o == nil || o.Phone == nil {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContactPhone) GetPhoneOk() (*string, bool) {
	if o == nil || o.Phone == nil {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *WhatsappMessageContactPhone) HasPhone() bool {
	if o != nil && o.Phone != nil {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *WhatsappMessageContactPhone) SetPhone(v string) {
	o.Phone = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *WhatsappMessageContactPhone) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContactPhone) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *WhatsappMessageContactPhone) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *WhatsappMessageContactPhone) SetType(v string) {
	o.Type = &v
}

// GetWaId returns the WaId field value if set, zero value otherwise.
func (o *WhatsappMessageContactPhone) GetWaId() string {
	if o == nil || o.WaId == nil {
		var ret string
		return ret
	}
	return *o.WaId
}

// GetWaIdOk returns a tuple with the WaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageContactPhone) GetWaIdOk() (*string, bool) {
	if o == nil || o.WaId == nil {
		return nil, false
	}
	return o.WaId, true
}

// HasWaId returns a boolean if a field has been set.
func (o *WhatsappMessageContactPhone) HasWaId() bool {
	if o != nil && o.WaId != nil {
		return true
	}

	return false
}

// SetWaId gets a reference to the given string and assigns it to the WaId field.
func (o *WhatsappMessageContactPhone) SetWaId(v string) {
	o.WaId = &v
}

func (o WhatsappMessageContactPhone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Phone != nil {
		toSerialize["phone"] = o.Phone
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	if o.WaId != nil {
		toSerialize["wa_id"] = o.WaId
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageContactPhone struct {
	value *WhatsappMessageContactPhone
	isSet bool
}

func (v NullableWhatsappMessageContactPhone) Get() *WhatsappMessageContactPhone {
	return v.value
}

func (v *NullableWhatsappMessageContactPhone) Set(val *WhatsappMessageContactPhone) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageContactPhone) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageContactPhone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageContactPhone(val *WhatsappMessageContactPhone) *NullableWhatsappMessageContactPhone {
	return &NullableWhatsappMessageContactPhone{value: val, isSet: true}
}

func (v NullableWhatsappMessageContactPhone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageContactPhone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


