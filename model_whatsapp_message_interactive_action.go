/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageInteractiveAction [WhatsApp Interactive Action Object](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages#action-object).
type WhatsappMessageInteractiveAction struct {
	// Required for Reply Buttons.
	Buttons []WhatsappMessageInteractiveActionButtonsInner `json:"buttons,omitempty"`
	// Required for List Messages. Button content. It cannot be an empty string and must be unique within the message. Emojis are supported, markdown is not.
	Button *string `json:"button,omitempty"`
	// Required for List Messages.
	Sections []WhatsappMessageInteractiveActionSectionsInner `json:"sections,omitempty"`
}

// NewWhatsappMessageInteractiveAction instantiates a new WhatsappMessageInteractiveAction object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageInteractiveAction() *WhatsappMessageInteractiveAction {
	this := WhatsappMessageInteractiveAction{}
	return &this
}

// NewWhatsappMessageInteractiveActionWithDefaults instantiates a new WhatsappMessageInteractiveAction object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageInteractiveActionWithDefaults() *WhatsappMessageInteractiveAction {
	this := WhatsappMessageInteractiveAction{}
	return &this
}

// GetButtons returns the Buttons field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveAction) GetButtons() []WhatsappMessageInteractiveActionButtonsInner {
	if o == nil || o.Buttons == nil {
		var ret []WhatsappMessageInteractiveActionButtonsInner
		return ret
	}
	return o.Buttons
}

// GetButtonsOk returns a tuple with the Buttons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveAction) GetButtonsOk() ([]WhatsappMessageInteractiveActionButtonsInner, bool) {
	if o == nil || o.Buttons == nil {
		return nil, false
	}
	return o.Buttons, true
}

// HasButtons returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveAction) HasButtons() bool {
	if o != nil && o.Buttons != nil {
		return true
	}

	return false
}

// SetButtons gets a reference to the given []WhatsappMessageInteractiveActionButtonsInner and assigns it to the Buttons field.
func (o *WhatsappMessageInteractiveAction) SetButtons(v []WhatsappMessageInteractiveActionButtonsInner) {
	o.Buttons = v
}

// GetButton returns the Button field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveAction) GetButton() string {
	if o == nil || o.Button == nil {
		var ret string
		return ret
	}
	return *o.Button
}

// GetButtonOk returns a tuple with the Button field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveAction) GetButtonOk() (*string, bool) {
	if o == nil || o.Button == nil {
		return nil, false
	}
	return o.Button, true
}

// HasButton returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveAction) HasButton() bool {
	if o != nil && o.Button != nil {
		return true
	}

	return false
}

// SetButton gets a reference to the given string and assigns it to the Button field.
func (o *WhatsappMessageInteractiveAction) SetButton(v string) {
	o.Button = &v
}

// GetSections returns the Sections field value if set, zero value otherwise.
func (o *WhatsappMessageInteractiveAction) GetSections() []WhatsappMessageInteractiveActionSectionsInner {
	if o == nil || o.Sections == nil {
		var ret []WhatsappMessageInteractiveActionSectionsInner
		return ret
	}
	return o.Sections
}

// GetSectionsOk returns a tuple with the Sections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractiveAction) GetSectionsOk() ([]WhatsappMessageInteractiveActionSectionsInner, bool) {
	if o == nil || o.Sections == nil {
		return nil, false
	}
	return o.Sections, true
}

// HasSections returns a boolean if a field has been set.
func (o *WhatsappMessageInteractiveAction) HasSections() bool {
	if o != nil && o.Sections != nil {
		return true
	}

	return false
}

// SetSections gets a reference to the given []WhatsappMessageInteractiveActionSectionsInner and assigns it to the Sections field.
func (o *WhatsappMessageInteractiveAction) SetSections(v []WhatsappMessageInteractiveActionSectionsInner) {
	o.Sections = v
}

func (o WhatsappMessageInteractiveAction) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Buttons != nil {
		toSerialize["buttons"] = o.Buttons
	}
	if o.Button != nil {
		toSerialize["button"] = o.Button
	}
	if o.Sections != nil {
		toSerialize["sections"] = o.Sections
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageInteractiveAction struct {
	value *WhatsappMessageInteractiveAction
	isSet bool
}

func (v NullableWhatsappMessageInteractiveAction) Get() *WhatsappMessageInteractiveAction {
	return v.value
}

func (v *NullableWhatsappMessageInteractiveAction) Set(val *WhatsappMessageInteractiveAction) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageInteractiveAction) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageInteractiveAction) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageInteractiveAction(val *WhatsappMessageInteractiveAction) *NullableWhatsappMessageInteractiveAction {
	return &NullableWhatsappMessageInteractiveAction{value: val, isSet: true}
}

func (v NullableWhatsappMessageInteractiveAction) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageInteractiveAction) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


