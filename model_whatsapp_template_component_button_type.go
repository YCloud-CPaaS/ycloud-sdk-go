/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappTemplateComponentButtonType the model 'WhatsappTemplateComponentButtonType'
type WhatsappTemplateComponentButtonType string

// List of WhatsappTemplateComponentButtonType
const (
	WHATSAPPTEMPLATECOMPONENTBUTTONTYPE_PHONE_NUMBER WhatsappTemplateComponentButtonType = "PHONE_NUMBER"
	WHATSAPPTEMPLATECOMPONENTBUTTONTYPE_URL WhatsappTemplateComponentButtonType = "URL"
	WHATSAPPTEMPLATECOMPONENTBUTTONTYPE_QUICK_REPLY WhatsappTemplateComponentButtonType = "QUICK_REPLY"
)

// All allowed values of WhatsappTemplateComponentButtonType enum
var AllowedWhatsappTemplateComponentButtonTypeEnumValues = []WhatsappTemplateComponentButtonType{
	"PHONE_NUMBER",
	"URL",
	"QUICK_REPLY",
}

func (v *WhatsappTemplateComponentButtonType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappTemplateComponentButtonType(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappTemplateComponentButtonTypeFromValue returns a pointer to a valid WhatsappTemplateComponentButtonType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappTemplateComponentButtonTypeFromValue(v string) (*WhatsappTemplateComponentButtonType, error) {
	ev := WhatsappTemplateComponentButtonType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappTemplateComponentButtonType: valid values are %v", v, AllowedWhatsappTemplateComponentButtonTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappTemplateComponentButtonType) IsValid() bool {
	for _, existing := range AllowedWhatsappTemplateComponentButtonTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappTemplateComponentButtonType value
func (v WhatsappTemplateComponentButtonType) Ptr() *WhatsappTemplateComponentButtonType {
	return &v
}

type NullableWhatsappTemplateComponentButtonType struct {
	value *WhatsappTemplateComponentButtonType
	isSet bool
}

func (v NullableWhatsappTemplateComponentButtonType) Get() *WhatsappTemplateComponentButtonType {
	return v.value
}

func (v *NullableWhatsappTemplateComponentButtonType) Set(val *WhatsappTemplateComponentButtonType) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappTemplateComponentButtonType) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappTemplateComponentButtonType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappTemplateComponentButtonType(val *WhatsappTemplateComponentButtonType) *NullableWhatsappTemplateComponentButtonType {
	return &NullableWhatsappTemplateComponentButtonType{value: val, isSet: true}
}

func (v NullableWhatsappTemplateComponentButtonType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappTemplateComponentButtonType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

