/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageTemplateLanguage Contains a language object. Specifies the language the template may be rendered in.
type WhatsappMessageTemplateLanguage struct {
	// The code of the language or locale to use. Accepts both language and language_locale formats (e.g., en and en_US). See [Supported Languages](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages-) for all codes.
	Code string `json:"code"`
}

// NewWhatsappMessageTemplateLanguage instantiates a new WhatsappMessageTemplateLanguage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageTemplateLanguage(code string) *WhatsappMessageTemplateLanguage {
	this := WhatsappMessageTemplateLanguage{}
	this.Code = code
	return &this
}

// NewWhatsappMessageTemplateLanguageWithDefaults instantiates a new WhatsappMessageTemplateLanguage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageTemplateLanguageWithDefaults() *WhatsappMessageTemplateLanguage {
	this := WhatsappMessageTemplateLanguage{}
	return &this
}

// GetCode returns the Code field value
func (o *WhatsappMessageTemplateLanguage) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageTemplateLanguage) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *WhatsappMessageTemplateLanguage) SetCode(v string) {
	o.Code = v
}

func (o WhatsappMessageTemplateLanguage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["code"] = o.Code
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageTemplateLanguage struct {
	value *WhatsappMessageTemplateLanguage
	isSet bool
}

func (v NullableWhatsappMessageTemplateLanguage) Get() *WhatsappMessageTemplateLanguage {
	return v.value
}

func (v *NullableWhatsappMessageTemplateLanguage) Set(val *WhatsappMessageTemplateLanguage) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageTemplateLanguage) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageTemplateLanguage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageTemplateLanguage(val *WhatsappMessageTemplateLanguage) *NullableWhatsappMessageTemplateLanguage {
	return &NullableWhatsappMessageTemplateLanguage{value: val, isSet: true}
}

func (v NullableWhatsappMessageTemplateLanguage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageTemplateLanguage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


