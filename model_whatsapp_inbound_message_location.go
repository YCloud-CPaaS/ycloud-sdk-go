/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageLocation When you receive a notification of a user's static location, the location object provides the details of the location.
type WhatsappInboundMessageLocation struct {
	// Latitude of location being sent.
	Latitude *float64 `json:"latitude,omitempty"`
	// Longitude of location being sent.
	Longitude *float64 `json:"longitude,omitempty"`
	// Address of the location.
	Address *string `json:"address,omitempty"`
	// Name of the location.
	Name *string `json:"name,omitempty"`
	// URL for the website where the user downloaded the location information.
	Url *string `json:"url,omitempty"`
}

// NewWhatsappInboundMessageLocation instantiates a new WhatsappInboundMessageLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageLocation() *WhatsappInboundMessageLocation {
	this := WhatsappInboundMessageLocation{}
	return &this
}

// NewWhatsappInboundMessageLocationWithDefaults instantiates a new WhatsappInboundMessageLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageLocationWithDefaults() *WhatsappInboundMessageLocation {
	this := WhatsappInboundMessageLocation{}
	return &this
}

// GetLatitude returns the Latitude field value if set, zero value otherwise.
func (o *WhatsappInboundMessageLocation) GetLatitude() float64 {
	if o == nil || o.Latitude == nil {
		var ret float64
		return ret
	}
	return *o.Latitude
}

// GetLatitudeOk returns a tuple with the Latitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageLocation) GetLatitudeOk() (*float64, bool) {
	if o == nil || o.Latitude == nil {
		return nil, false
	}
	return o.Latitude, true
}

// HasLatitude returns a boolean if a field has been set.
func (o *WhatsappInboundMessageLocation) HasLatitude() bool {
	if o != nil && o.Latitude != nil {
		return true
	}

	return false
}

// SetLatitude gets a reference to the given float64 and assigns it to the Latitude field.
func (o *WhatsappInboundMessageLocation) SetLatitude(v float64) {
	o.Latitude = &v
}

// GetLongitude returns the Longitude field value if set, zero value otherwise.
func (o *WhatsappInboundMessageLocation) GetLongitude() float64 {
	if o == nil || o.Longitude == nil {
		var ret float64
		return ret
	}
	return *o.Longitude
}

// GetLongitudeOk returns a tuple with the Longitude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageLocation) GetLongitudeOk() (*float64, bool) {
	if o == nil || o.Longitude == nil {
		return nil, false
	}
	return o.Longitude, true
}

// HasLongitude returns a boolean if a field has been set.
func (o *WhatsappInboundMessageLocation) HasLongitude() bool {
	if o != nil && o.Longitude != nil {
		return true
	}

	return false
}

// SetLongitude gets a reference to the given float64 and assigns it to the Longitude field.
func (o *WhatsappInboundMessageLocation) SetLongitude(v float64) {
	o.Longitude = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *WhatsappInboundMessageLocation) GetAddress() string {
	if o == nil || o.Address == nil {
		var ret string
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageLocation) GetAddressOk() (*string, bool) {
	if o == nil || o.Address == nil {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *WhatsappInboundMessageLocation) HasAddress() bool {
	if o != nil && o.Address != nil {
		return true
	}

	return false
}

// SetAddress gets a reference to the given string and assigns it to the Address field.
func (o *WhatsappInboundMessageLocation) SetAddress(v string) {
	o.Address = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *WhatsappInboundMessageLocation) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageLocation) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *WhatsappInboundMessageLocation) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *WhatsappInboundMessageLocation) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *WhatsappInboundMessageLocation) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageLocation) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *WhatsappInboundMessageLocation) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *WhatsappInboundMessageLocation) SetUrl(v string) {
	o.Url = &v
}

func (o WhatsappInboundMessageLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Latitude != nil {
		toSerialize["latitude"] = o.Latitude
	}
	if o.Longitude != nil {
		toSerialize["longitude"] = o.Longitude
	}
	if o.Address != nil {
		toSerialize["address"] = o.Address
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageLocation struct {
	value *WhatsappInboundMessageLocation
	isSet bool
}

func (v NullableWhatsappInboundMessageLocation) Get() *WhatsappInboundMessageLocation {
	return v.value
}

func (v *NullableWhatsappInboundMessageLocation) Set(val *WhatsappInboundMessageLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageLocation(val *WhatsappInboundMessageLocation) *NullableWhatsappInboundMessageLocation {
	return &NullableWhatsappInboundMessageLocation{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


