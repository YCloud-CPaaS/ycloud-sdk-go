/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// ContactCustomAttribute struct for ContactCustomAttribute
type ContactCustomAttribute struct {
	// Name of the attribute that you've previously defined.
	Name *string `json:"name,omitempty"`
	// Value of the attribute. Its data type depends on the format of the attribute you defined: For Text, the `value` is a string with a maximum length of 250.  For Array, the `value` is an array of strings with a maximum length of 250. For Number, the `value` is a signed decimal number. For Boolean, the `value` is either `true` or `false`. For Time, the `value` is a Unix timestamp in milliseconds. For Long Text, the `value` is a string with a maximum length of 5000.
	Value map[string]interface{} `json:"value,omitempty"`
}

// NewContactCustomAttribute instantiates a new ContactCustomAttribute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContactCustomAttribute() *ContactCustomAttribute {
	this := ContactCustomAttribute{}
	return &this
}

// NewContactCustomAttributeWithDefaults instantiates a new ContactCustomAttribute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContactCustomAttributeWithDefaults() *ContactCustomAttribute {
	this := ContactCustomAttribute{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ContactCustomAttribute) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCustomAttribute) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ContactCustomAttribute) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ContactCustomAttribute) SetName(v string) {
	o.Name = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ContactCustomAttribute) GetValue() map[string]interface{} {
	if o == nil || o.Value == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContactCustomAttribute) GetValueOk() (map[string]interface{}, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ContactCustomAttribute) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given map[string]interface{} and assigns it to the Value field.
func (o *ContactCustomAttribute) SetValue(v map[string]interface{}) {
	o.Value = v
}

func (o ContactCustomAttribute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableContactCustomAttribute struct {
	value *ContactCustomAttribute
	isSet bool
}

func (v NullableContactCustomAttribute) Get() *ContactCustomAttribute {
	return v.value
}

func (v *NullableContactCustomAttribute) Set(val *ContactCustomAttribute) {
	v.value = val
	v.isSet = true
}

func (v NullableContactCustomAttribute) IsSet() bool {
	return v.isSet
}

func (v *NullableContactCustomAttribute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContactCustomAttribute(val *ContactCustomAttribute) *NullableContactCustomAttribute {
	return &NullableContactCustomAttribute{value: val, isSet: true}
}

func (v NullableContactCustomAttribute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContactCustomAttribute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


