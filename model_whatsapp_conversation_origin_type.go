/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappConversationOriginType Indicates who initiated the conversation. **Note: Starting June 1, 2023, `business_initiated` will be replaced with `authentication`, `marketing`, and `utility`, while `user_initiated` will be replaced with `service`. For more information, see also [Updates to conversation-based pricing: Effective June 1, 2023](https://developers.facebook.com/docs/whatsapp/updates-to-pricing).**  - `business_initiated`: Indicates that the conversation started by a business sending the first message to a customer. This applies any time it has been more than 24 hours since the last customer message. - `user_initiated`: Indicates that the conversation started by a business replying to a customer message. This applies only when the business reply is within 24 hours of the last customer message. - `referral_conversion`: Indicates the user initiated the conversation by clicking a [Click to WhatsApp ad](https://www.facebook.com/business/help/447934475640650) or a [Facebook Page Call-to-Action button](https://www.facebook.com/help/977869848936797). - `authentication`: Indicates the business initiated the conversation with a message template categorized as `AUTHENTICATION`. - `marketing`: Indicates the business initiated the conversation with a message template categorized as `MARKETING`. - `utility`: Indicates the business initiated the conversation with a message template categorized as `UTILITY`. - `service`: Indicates the user initiated the conversation.
type WhatsappConversationOriginType string

// List of WhatsappConversationOriginType
const (
	WHATSAPPCONVERSATIONORIGINTYPE_BUSINESS_INITIATED  WhatsappConversationOriginType = "business_initiated"
	WHATSAPPCONVERSATIONORIGINTYPE_USER_INITIATED      WhatsappConversationOriginType = "user_initiated"
	WHATSAPPCONVERSATIONORIGINTYPE_REFERRAL_CONVERSION WhatsappConversationOriginType = "referral_conversion"
	WHATSAPPCONVERSATIONORIGINTYPE_AUTHENTICATION      WhatsappConversationOriginType = "authentication"
	WHATSAPPCONVERSATIONORIGINTYPE_MARKETING           WhatsappConversationOriginType = "marketing"
	WHATSAPPCONVERSATIONORIGINTYPE_UTILITY             WhatsappConversationOriginType = "utility"
	WHATSAPPCONVERSATIONORIGINTYPE_SERVICE             WhatsappConversationOriginType = "service"
)

// All allowed values of WhatsappConversationOriginType enum
var AllowedWhatsappConversationOriginTypeEnumValues = []WhatsappConversationOriginType{
	"business_initiated",
	"user_initiated",
	"referral_conversion",
	"authentication",
	"marketing",
	"utility",
	"service",
}

func (v *WhatsappConversationOriginType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappConversationOriginType(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappConversationOriginTypeFromValue returns a pointer to a valid WhatsappConversationOriginType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappConversationOriginTypeFromValue(v string) (*WhatsappConversationOriginType, error) {
	ev := WhatsappConversationOriginType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappConversationOriginType: valid values are %v", v, AllowedWhatsappConversationOriginTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappConversationOriginType) IsValid() bool {
	for _, existing := range AllowedWhatsappConversationOriginTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappConversationOriginType value
func (v WhatsappConversationOriginType) Ptr() *WhatsappConversationOriginType {
	return &v
}

type NullableWhatsappConversationOriginType struct {
	value *WhatsappConversationOriginType
	isSet bool
}

func (v NullableWhatsappConversationOriginType) Get() *WhatsappConversationOriginType {
	return v.value
}

func (v *NullableWhatsappConversationOriginType) Set(val *WhatsappConversationOriginType) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappConversationOriginType) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappConversationOriginType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappConversationOriginType(val *WhatsappConversationOriginType) *NullableWhatsappConversationOriginType {
	return &NullableWhatsappConversationOriginType{value: val, isSet: true}
}

func (v NullableWhatsappConversationOriginType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappConversationOriginType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
