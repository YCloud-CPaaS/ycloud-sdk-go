/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"time"
)

// WhatsappTemplate See [WhatsApp Templates](https://developers.facebook.com/docs/whatsapp/business-management-api/message-templates).
type WhatsappTemplate struct {
	// WhatsApp Business Account ID.
	WabaId *string `json:"wabaId,omitempty"`
	// Name of the template.
	Name string `json:"name"`
	// Language code of the template. See [Supported Languages](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates#supported-languages-) for all codes.
	Language string `json:"language"`
	Category WhatsappTemplateCategory `json:"category"`
	Components []WhatsappTemplateComponent `json:"components"`
	Status *WhatsappTemplateStatus `json:"status,omitempty"`
	// The reason why the template is rejected.
	Reason *string `json:"reason,omitempty"`
	// The time at which this object is created, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	CreateTime *time.Time `json:"createTime,omitempty"`
	// The time at which this object is updated, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	UpdateTime *time.Time `json:"updateTime,omitempty"`
}

// NewWhatsappTemplate instantiates a new WhatsappTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappTemplate(name string, language string, category WhatsappTemplateCategory, components []WhatsappTemplateComponent) *WhatsappTemplate {
	this := WhatsappTemplate{}
	this.Name = name
	this.Language = language
	this.Category = category
	this.Components = components
	return &this
}

// NewWhatsappTemplateWithDefaults instantiates a new WhatsappTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappTemplateWithDefaults() *WhatsappTemplate {
	this := WhatsappTemplate{}
	return &this
}

// GetWabaId returns the WabaId field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetWabaId() string {
	if o == nil || o.WabaId == nil {
		var ret string
		return ret
	}
	return *o.WabaId
}

// GetWabaIdOk returns a tuple with the WabaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetWabaIdOk() (*string, bool) {
	if o == nil || o.WabaId == nil {
		return nil, false
	}
	return o.WabaId, true
}

// HasWabaId returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasWabaId() bool {
	if o != nil && o.WabaId != nil {
		return true
	}

	return false
}

// SetWabaId gets a reference to the given string and assigns it to the WabaId field.
func (o *WhatsappTemplate) SetWabaId(v string) {
	o.WabaId = &v
}

// GetName returns the Name field value
func (o *WhatsappTemplate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *WhatsappTemplate) SetName(v string) {
	o.Name = v
}

// GetLanguage returns the Language field value
func (o *WhatsappTemplate) GetLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *WhatsappTemplate) SetLanguage(v string) {
	o.Language = v
}

// GetCategory returns the Category field value
func (o *WhatsappTemplate) GetCategory() WhatsappTemplateCategory {
	if o == nil {
		var ret WhatsappTemplateCategory
		return ret
	}

	return o.Category
}

// GetCategoryOk returns a tuple with the Category field value
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetCategoryOk() (*WhatsappTemplateCategory, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Category, true
}

// SetCategory sets field value
func (o *WhatsappTemplate) SetCategory(v WhatsappTemplateCategory) {
	o.Category = v
}

// GetComponents returns the Components field value
func (o *WhatsappTemplate) GetComponents() []WhatsappTemplateComponent {
	if o == nil {
		var ret []WhatsappTemplateComponent
		return ret
	}

	return o.Components
}

// GetComponentsOk returns a tuple with the Components field value
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetComponentsOk() ([]WhatsappTemplateComponent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Components, true
}

// SetComponents sets field value
func (o *WhatsappTemplate) SetComponents(v []WhatsappTemplateComponent) {
	o.Components = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetStatus() WhatsappTemplateStatus {
	if o == nil || o.Status == nil {
		var ret WhatsappTemplateStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetStatusOk() (*WhatsappTemplateStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WhatsappTemplateStatus and assigns it to the Status field.
func (o *WhatsappTemplate) SetStatus(v WhatsappTemplateStatus) {
	o.Status = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *WhatsappTemplate) SetReason(v string) {
	o.Reason = &v
}

// GetCreateTime returns the CreateTime field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetCreateTime() time.Time {
	if o == nil || o.CreateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil || o.CreateTime == nil {
		return nil, false
	}
	return o.CreateTime, true
}

// HasCreateTime returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasCreateTime() bool {
	if o != nil && o.CreateTime != nil {
		return true
	}

	return false
}

// SetCreateTime gets a reference to the given time.Time and assigns it to the CreateTime field.
func (o *WhatsappTemplate) SetCreateTime(v time.Time) {
	o.CreateTime = &v
}

// GetUpdateTime returns the UpdateTime field value if set, zero value otherwise.
func (o *WhatsappTemplate) GetUpdateTime() time.Time {
	if o == nil || o.UpdateTime == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdateTime
}

// GetUpdateTimeOk returns a tuple with the UpdateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappTemplate) GetUpdateTimeOk() (*time.Time, bool) {
	if o == nil || o.UpdateTime == nil {
		return nil, false
	}
	return o.UpdateTime, true
}

// HasUpdateTime returns a boolean if a field has been set.
func (o *WhatsappTemplate) HasUpdateTime() bool {
	if o != nil && o.UpdateTime != nil {
		return true
	}

	return false
}

// SetUpdateTime gets a reference to the given time.Time and assigns it to the UpdateTime field.
func (o *WhatsappTemplate) SetUpdateTime(v time.Time) {
	o.UpdateTime = &v
}

func (o WhatsappTemplate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WabaId != nil {
		toSerialize["wabaId"] = o.WabaId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["language"] = o.Language
	}
	if true {
		toSerialize["category"] = o.Category
	}
	if true {
		toSerialize["components"] = o.Components
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if o.CreateTime != nil {
		toSerialize["createTime"] = o.CreateTime
	}
	if o.UpdateTime != nil {
		toSerialize["updateTime"] = o.UpdateTime
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappTemplate struct {
	value *WhatsappTemplate
	isSet bool
}

func (v NullableWhatsappTemplate) Get() *WhatsappTemplate {
	return v.value
}

func (v *NullableWhatsappTemplate) Set(val *WhatsappTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappTemplate(val *WhatsappTemplate) *NullableWhatsappTemplate {
	return &NullableWhatsappTemplate{value: val, isSet: true}
}

func (v NullableWhatsappTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


