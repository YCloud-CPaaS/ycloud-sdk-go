/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"fmt"
)

// WhatsappBusinessAccountBanState The ban state of the WhatsApp Business Account.
type WhatsappBusinessAccountBanState string

// List of WhatsappBusinessAccountBanState
const (
	WHATSAPPBUSINESSACCOUNTBANSTATE_SCHEDULE_FOR_DISABLE WhatsappBusinessAccountBanState = "SCHEDULE_FOR_DISABLE"
	WHATSAPPBUSINESSACCOUNTBANSTATE_DISABLE WhatsappBusinessAccountBanState = "DISABLE"
	WHATSAPPBUSINESSACCOUNTBANSTATE_REINSTATE WhatsappBusinessAccountBanState = "REINSTATE"
)

// All allowed values of WhatsappBusinessAccountBanState enum
var AllowedWhatsappBusinessAccountBanStateEnumValues = []WhatsappBusinessAccountBanState{
	"SCHEDULE_FOR_DISABLE",
	"DISABLE",
	"REINSTATE",
}

func (v *WhatsappBusinessAccountBanState) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := WhatsappBusinessAccountBanState(value)
	*v = enumTypeValue
	return nil
}

// NewWhatsappBusinessAccountBanStateFromValue returns a pointer to a valid WhatsappBusinessAccountBanState
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewWhatsappBusinessAccountBanStateFromValue(v string) (*WhatsappBusinessAccountBanState, error) {
	ev := WhatsappBusinessAccountBanState(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for WhatsappBusinessAccountBanState: valid values are %v", v, AllowedWhatsappBusinessAccountBanStateEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v WhatsappBusinessAccountBanState) IsValid() bool {
	for _, existing := range AllowedWhatsappBusinessAccountBanStateEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to WhatsappBusinessAccountBanState value
func (v WhatsappBusinessAccountBanState) Ptr() *WhatsappBusinessAccountBanState {
	return &v
}

type NullableWhatsappBusinessAccountBanState struct {
	value *WhatsappBusinessAccountBanState
	isSet bool
}

func (v NullableWhatsappBusinessAccountBanState) Get() *WhatsappBusinessAccountBanState {
	return v.value
}

func (v *NullableWhatsappBusinessAccountBanState) Set(val *WhatsappBusinessAccountBanState) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappBusinessAccountBanState) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappBusinessAccountBanState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappBusinessAccountBanState(val *WhatsappBusinessAccountBanState) *NullableWhatsappBusinessAccountBanState {
	return &NullableWhatsappBusinessAccountBanState{value: val, isSet: true}
}

func (v NullableWhatsappBusinessAccountBanState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappBusinessAccountBanState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

