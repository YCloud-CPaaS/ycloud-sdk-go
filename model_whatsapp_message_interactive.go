/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappMessageInteractive [WhatsApp Interactive Object](https://developers.facebook.com/docs/whatsapp/cloud-api/reference/messages#interactive-object).
type WhatsappMessageInteractive struct {
	// The type of interactive message you want to send. - `list`: Use it for List Messages. - `button`: Use it for Reply Buttons.
	Type string `json:"type"`
	Action WhatsappMessageInteractiveAction `json:"action"`
	Body WhatsappMessageInteractiveBody `json:"body"`
	Header *WhatsappMessageInteractiveHeader `json:"header,omitempty"`
	Footer *WhatsappMessageInteractiveFooter `json:"footer,omitempty"`
}

// NewWhatsappMessageInteractive instantiates a new WhatsappMessageInteractive object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappMessageInteractive(type_ string, action WhatsappMessageInteractiveAction, body WhatsappMessageInteractiveBody) *WhatsappMessageInteractive {
	this := WhatsappMessageInteractive{}
	this.Type = type_
	this.Action = action
	this.Body = body
	return &this
}

// NewWhatsappMessageInteractiveWithDefaults instantiates a new WhatsappMessageInteractive object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappMessageInteractiveWithDefaults() *WhatsappMessageInteractive {
	this := WhatsappMessageInteractive{}
	return &this
}

// GetType returns the Type field value
func (o *WhatsappMessageInteractive) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractive) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *WhatsappMessageInteractive) SetType(v string) {
	o.Type = v
}

// GetAction returns the Action field value
func (o *WhatsappMessageInteractive) GetAction() WhatsappMessageInteractiveAction {
	if o == nil {
		var ret WhatsappMessageInteractiveAction
		return ret
	}

	return o.Action
}

// GetActionOk returns a tuple with the Action field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractive) GetActionOk() (*WhatsappMessageInteractiveAction, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Action, true
}

// SetAction sets field value
func (o *WhatsappMessageInteractive) SetAction(v WhatsappMessageInteractiveAction) {
	o.Action = v
}

// GetBody returns the Body field value
func (o *WhatsappMessageInteractive) GetBody() WhatsappMessageInteractiveBody {
	if o == nil {
		var ret WhatsappMessageInteractiveBody
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractive) GetBodyOk() (*WhatsappMessageInteractiveBody, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *WhatsappMessageInteractive) SetBody(v WhatsappMessageInteractiveBody) {
	o.Body = v
}

// GetHeader returns the Header field value if set, zero value otherwise.
func (o *WhatsappMessageInteractive) GetHeader() WhatsappMessageInteractiveHeader {
	if o == nil || o.Header == nil {
		var ret WhatsappMessageInteractiveHeader
		return ret
	}
	return *o.Header
}

// GetHeaderOk returns a tuple with the Header field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractive) GetHeaderOk() (*WhatsappMessageInteractiveHeader, bool) {
	if o == nil || o.Header == nil {
		return nil, false
	}
	return o.Header, true
}

// HasHeader returns a boolean if a field has been set.
func (o *WhatsappMessageInteractive) HasHeader() bool {
	if o != nil && o.Header != nil {
		return true
	}

	return false
}

// SetHeader gets a reference to the given WhatsappMessageInteractiveHeader and assigns it to the Header field.
func (o *WhatsappMessageInteractive) SetHeader(v WhatsappMessageInteractiveHeader) {
	o.Header = &v
}

// GetFooter returns the Footer field value if set, zero value otherwise.
func (o *WhatsappMessageInteractive) GetFooter() WhatsappMessageInteractiveFooter {
	if o == nil || o.Footer == nil {
		var ret WhatsappMessageInteractiveFooter
		return ret
	}
	return *o.Footer
}

// GetFooterOk returns a tuple with the Footer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappMessageInteractive) GetFooterOk() (*WhatsappMessageInteractiveFooter, bool) {
	if o == nil || o.Footer == nil {
		return nil, false
	}
	return o.Footer, true
}

// HasFooter returns a boolean if a field has been set.
func (o *WhatsappMessageInteractive) HasFooter() bool {
	if o != nil && o.Footer != nil {
		return true
	}

	return false
}

// SetFooter gets a reference to the given WhatsappMessageInteractiveFooter and assigns it to the Footer field.
func (o *WhatsappMessageInteractive) SetFooter(v WhatsappMessageInteractiveFooter) {
	o.Footer = &v
}

func (o WhatsappMessageInteractive) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["action"] = o.Action
	}
	if true {
		toSerialize["body"] = o.Body
	}
	if o.Header != nil {
		toSerialize["header"] = o.Header
	}
	if o.Footer != nil {
		toSerialize["footer"] = o.Footer
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappMessageInteractive struct {
	value *WhatsappMessageInteractive
	isSet bool
}

func (v NullableWhatsappMessageInteractive) Get() *WhatsappMessageInteractive {
	return v.value
}

func (v *NullableWhatsappMessageInteractive) Set(val *WhatsappMessageInteractive) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappMessageInteractive) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappMessageInteractive) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappMessageInteractive(val *WhatsappMessageInteractive) *NullableWhatsappMessageInteractive {
	return &NullableWhatsappMessageInteractive{value: val, isSet: true}
}

func (v NullableWhatsappMessageInteractive) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappMessageInteractive) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


