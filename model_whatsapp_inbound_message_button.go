/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
)

// WhatsappInboundMessageButton When the message type field is set to `button`, this object is included in the message object.
type WhatsappInboundMessageButton struct {
	// The payload for a button set up by the business that a customer clicked as part of an interactive message.
	Payload *string `json:"payload,omitempty"`
	// Button text.
	Text *string `json:"text,omitempty"`
}

// NewWhatsappInboundMessageButton instantiates a new WhatsappInboundMessageButton object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWhatsappInboundMessageButton() *WhatsappInboundMessageButton {
	this := WhatsappInboundMessageButton{}
	return &this
}

// NewWhatsappInboundMessageButtonWithDefaults instantiates a new WhatsappInboundMessageButton object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWhatsappInboundMessageButtonWithDefaults() *WhatsappInboundMessageButton {
	this := WhatsappInboundMessageButton{}
	return &this
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *WhatsappInboundMessageButton) GetPayload() string {
	if o == nil || o.Payload == nil {
		var ret string
		return ret
	}
	return *o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageButton) GetPayloadOk() (*string, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *WhatsappInboundMessageButton) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given string and assigns it to the Payload field.
func (o *WhatsappInboundMessageButton) SetPayload(v string) {
	o.Payload = &v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *WhatsappInboundMessageButton) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WhatsappInboundMessageButton) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *WhatsappInboundMessageButton) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *WhatsappInboundMessageButton) SetText(v string) {
	o.Text = &v
}

func (o WhatsappInboundMessageButton) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	return json.Marshal(toSerialize)
}

type NullableWhatsappInboundMessageButton struct {
	value *WhatsappInboundMessageButton
	isSet bool
}

func (v NullableWhatsappInboundMessageButton) Get() *WhatsappInboundMessageButton {
	return v.value
}

func (v *NullableWhatsappInboundMessageButton) Set(val *WhatsappInboundMessageButton) {
	v.value = val
	v.isSet = true
}

func (v NullableWhatsappInboundMessageButton) IsSet() bool {
	return v.isSet
}

func (v *NullableWhatsappInboundMessageButton) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWhatsappInboundMessageButton(val *WhatsappInboundMessageButton) *NullableWhatsappInboundMessageButton {
	return &NullableWhatsappInboundMessageButton{value: val, isSet: true}
}

func (v NullableWhatsappInboundMessageButton) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWhatsappInboundMessageButton) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


