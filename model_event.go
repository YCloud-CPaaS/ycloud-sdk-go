/*
YCloud API

The [YCloud](https://ycloud.com) API is organized around [REST](https://en.wikipedia.org/wiki/Representational_state_transfer). Our API is designed to have predictable, resource-oriented URLs, return [JSON](https://www.json.org) responses, and use standard HTTP response codes and verbs.

API version: v2
Contact: service@ycloud.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ycloud

import (
	"encoding/json"
	"time"
)

// Event Represents a webhook event payload. Every event contains certain common properties: `id`, `type`, `apiVersion`, `createTime`. Each event may also contain some properties unique to the event. For example, `sms` is returned when `type` is `sms.message.updated`.
type Event struct {
	// Unique ID for the object.
	Id string `json:"id"`
	// Type of this event.
	Type string `json:"type"`
	// The API version used to render this event.
	ApiVersion string `json:"apiVersion"`
	// The time at which this event was created, formatted in [RFC 3339](https://datatracker.ietf.org/doc/html/rfc3339). e.g., `2022-06-01T12:00:00.000Z`.
	CreateTime time.Time `json:"createTime"`
	EmailDelivery *EmailDelivery `json:"emailDelivery,omitempty"`
	Sms *Sms `json:"sms,omitempty"`
	Voice *Voice `json:"voice,omitempty"`
}

// NewEvent instantiates a new Event object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEvent(id string, type_ string, apiVersion string, createTime time.Time) *Event {
	this := Event{}
	this.Id = id
	this.Type = type_
	this.ApiVersion = apiVersion
	this.CreateTime = createTime
	return &this
}

// NewEventWithDefaults instantiates a new Event object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventWithDefaults() *Event {
	this := Event{}
	return &this
}

// GetId returns the Id field value
func (o *Event) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Event) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Event) SetId(v string) {
	o.Id = v
}

// GetType returns the Type field value
func (o *Event) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Event) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Event) SetType(v string) {
	o.Type = v
}

// GetApiVersion returns the ApiVersion field value
func (o *Event) GetApiVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value
// and a boolean to check if the value has been set.
func (o *Event) GetApiVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiVersion, true
}

// SetApiVersion sets field value
func (o *Event) SetApiVersion(v string) {
	o.ApiVersion = v
}

// GetCreateTime returns the CreateTime field value
func (o *Event) GetCreateTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreateTime
}

// GetCreateTimeOk returns a tuple with the CreateTime field value
// and a boolean to check if the value has been set.
func (o *Event) GetCreateTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreateTime, true
}

// SetCreateTime sets field value
func (o *Event) SetCreateTime(v time.Time) {
	o.CreateTime = v
}

// GetEmailDelivery returns the EmailDelivery field value if set, zero value otherwise.
func (o *Event) GetEmailDelivery() EmailDelivery {
	if o == nil || o.EmailDelivery == nil {
		var ret EmailDelivery
		return ret
	}
	return *o.EmailDelivery
}

// GetEmailDeliveryOk returns a tuple with the EmailDelivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetEmailDeliveryOk() (*EmailDelivery, bool) {
	if o == nil || o.EmailDelivery == nil {
		return nil, false
	}
	return o.EmailDelivery, true
}

// HasEmailDelivery returns a boolean if a field has been set.
func (o *Event) HasEmailDelivery() bool {
	if o != nil && o.EmailDelivery != nil {
		return true
	}

	return false
}

// SetEmailDelivery gets a reference to the given EmailDelivery and assigns it to the EmailDelivery field.
func (o *Event) SetEmailDelivery(v EmailDelivery) {
	o.EmailDelivery = &v
}

// GetSms returns the Sms field value if set, zero value otherwise.
func (o *Event) GetSms() Sms {
	if o == nil || o.Sms == nil {
		var ret Sms
		return ret
	}
	return *o.Sms
}

// GetSmsOk returns a tuple with the Sms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetSmsOk() (*Sms, bool) {
	if o == nil || o.Sms == nil {
		return nil, false
	}
	return o.Sms, true
}

// HasSms returns a boolean if a field has been set.
func (o *Event) HasSms() bool {
	if o != nil && o.Sms != nil {
		return true
	}

	return false
}

// SetSms gets a reference to the given Sms and assigns it to the Sms field.
func (o *Event) SetSms(v Sms) {
	o.Sms = &v
}

// GetVoice returns the Voice field value if set, zero value otherwise.
func (o *Event) GetVoice() Voice {
	if o == nil || o.Voice == nil {
		var ret Voice
		return ret
	}
	return *o.Voice
}

// GetVoiceOk returns a tuple with the Voice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Event) GetVoiceOk() (*Voice, bool) {
	if o == nil || o.Voice == nil {
		return nil, false
	}
	return o.Voice, true
}

// HasVoice returns a boolean if a field has been set.
func (o *Event) HasVoice() bool {
	if o != nil && o.Voice != nil {
		return true
	}

	return false
}

// SetVoice gets a reference to the given Voice and assigns it to the Voice field.
func (o *Event) SetVoice(v Voice) {
	o.Voice = &v
}

func (o Event) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if true {
		toSerialize["createTime"] = o.CreateTime
	}
	if o.EmailDelivery != nil {
		toSerialize["emailDelivery"] = o.EmailDelivery
	}
	if o.Sms != nil {
		toSerialize["sms"] = o.Sms
	}
	if o.Voice != nil {
		toSerialize["voice"] = o.Voice
	}
	return json.Marshal(toSerialize)
}

type NullableEvent struct {
	value *Event
	isSet bool
}

func (v NullableEvent) Get() *Event {
	return v.value
}

func (v *NullableEvent) Set(val *Event) {
	v.value = val
	v.isSet = true
}

func (v NullableEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEvent(val *Event) *NullableEvent {
	return &NullableEvent{value: val, isSet: true}
}

func (v NullableEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


